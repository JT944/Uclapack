library(jsonlite)
FRED_APIkey="43feed24d714332ac6ad5110919b6556"
realtime_start="2018-01-01"
realtime_end="2020-09-01"
search_text="GDP+China"
limit="50"
GETINFO=function(FRED_APIkey,search_text,realtime_start,realtime_end,limit){
URL= "https://api.stlouisfed.org/fred/series/search"
parameters = paste(
"?search_text=",search_text,
"&api_key=",FRED_APIkey,
"&file_type=json",
"&realtime_start=",realtime_start,
"&realtime_end=",realtime_end,
"&limit=",limit,
sep="")
PATH=paste0(URL,parameters)
initialquery=fromJSON(PATH)
attach(initialquery)
df= initialquery$seriess
df=df[c("title","units","popularity","notes")]
return(df)
}
GETINFO(FRED_APIkey="43feed24d714332ac6ad5110919b6556",
realtime_start="2018-01-01",
realtime_end="2020-09-01",
search_text="GDP+Japan",
limit="50")}
GETINFO(FRED_APIkey="43feed24d714332ac6ad5110919b6556",
realtime_start="2018-01-01",
realtime_end="2020-09-01",
search_text="GDP+Japan",
limit="50")
library(jsonlite)
library(httr)
autorepair=function(api1,api_key1,i){
client_id <- api1
client_secret <- api_key1
res <- POST("https://api.yelp.com/oauth2/token",
body = list(grant_type = "client_credentials",
client_id = client_id,
client_secret = client_secret))
token <- content(res)$access_token
yelp <- "https://api.yelp.com"
term <- "Auto Repair"
location <- i
categories <- NULL
limit <- 50
radius <- 8000
url <- modify_url(yelp, path = c("v3", "businesses", "search"),
query = list(term = term, location = location,
limit = limit,
radius = radius))
res <- GET(url, add_headers('Authorization' = paste("bearer", client_secret)))
results <- content(res)
yelp_httr_parse <- function(x) {
parse_list <- list(
name = x$name,
rating = x$rating,
address1 = x$location$address1
)
parse_list <- lapply(parse_list, FUN = function(x) ifelse(is.null(x), "", x))
df <- data.frame(
name=parse_list$name,
rating = parse_list$rating,
address1 = parse_list$address1
)
df
}
results_list <- lapply(results$businesses, FUN = yelp_httr_parse)
auto <- do.call("rbind", results_list)
auto
}
autorepair(api1="q-f2lLVGZkys5AVkVPWsuQ",api_key1 =  "tLcN4rX8BzXZTSE5fYKHntHgSbjHilyGQV8VoXq0zGgiwP7RM8rS0PCOuRyRpn6UkMsEE9gnXWqEs2V32IreXfwVjao7iiAgKeJQ85u2n_mbuZn3-Tuq3R7qs4CPX3Yx",i="Santa Cruz,CA")
library(jsonlite)
library(httr)
gym=function(api1,api_key1,i){
client_id <- api1
client_secret <- api_key1
res <- POST("https://api.yelp.com/oauth2/token",
body = list(grant_type = "client_credentials",
client_id = client_id,
client_secret = client_secret))
token <- content(res)$access_token
yelp <- "https://api.yelp.com"
term <- "gym"
location <- i
categories <- NULL
limit <- 50
radius <- 8000
url <- modify_url(yelp, path = c("v3", "businesses", "search"),
query = list(term = term, location = location,
limit = limit,
radius = radius))
res <- GET(url, add_headers('Authorization' = paste("bearer", client_secret)))
results <- content(res)
yelp_httr_parse <- function(x) {
parse_list <- list(
name = x$name,
rating = x$rating,
address1 = x$location$address1
)
parse_list <- lapply(parse_list, FUN = function(x) ifelse(is.null(x), "", x))
df <- data.frame(
name=parse_list$name,
rating = parse_list$rating,
address1 = parse_list$address1
)
df
}
results_list <- lapply(results$businesses, FUN = yelp_httr_parse)
GYM <- do.call("rbind", results_list)
GYM
}
gym(api1="q-f2lLVGZkys5AVkVPWsuQ",api_key1 =  "tLcN4rX8BzXZTSE5fYKHntHgSbjHilyGQV8VoXq0zGgiwP7RM8rS0PCOuRyRpn6UkMsEE9gnXWqEs2V32IreXfwVjao7iiAgKeJQ85u2n_mbuZn3-Tuq3R7qs4CPX3Yx",i="San Jose,CA")
library(jsonlite)
library(httr)
library("writexl")
Resturant=function(api1,api_key1,i){
client_id <- api1
client_secret <- api_key1
res <- POST("https://api.yelp.com/oauth2/token",
body = list(grant_type = "client_credentials",
client_id = client_id,
client_secret = client_secret))
token <- content(res)$access_token
yelp <- "https://api.yelp.com"
term <- "Restaurant"
location <- i
categories <- NULL
limit <- 50
radius <- 8000
url <- modify_url(yelp, path = c("v3", "businesses", "search"),
query = list(term = term, location = location,
limit = limit,
radius = radius))
res <- GET(url, add_headers('Authorization' = paste("bearer", client_secret)))
results <- content(res)
yelp_httr_parse <- function(x) {
parse_list <- list(
name = x$name,
rating = x$rating,
address1 = x$location$address1
)
parse_list <- lapply(parse_list, FUN = function(x) ifelse(is.null(x), "", x))
df <- data.frame(
name=parse_list$name,
rating = parse_list$rating,
address1 = parse_list$address1
)
df
}
results_list <- lapply(results$businesses, FUN = yelp_httr_parse)
resturant <- do.call("rbind", results_list)
resturant
}
Resturant(api1="q-f2lLVGZkys5AVkVPWsuQ",api_key1 =  "tLcN4rX8BzXZTSE5fYKHntHgSbjHilyGQV8VoXq0zGgiwP7RM8rS0PCOuRyRpn6UkMsEE9gnXWqEs2V32IreXfwVjao7iiAgKeJQ85u2n_mbuZn3-Tuq3R7qs4CPX3Yx",i="Irvine,CA")
library(jsonlite)
library(httr)
sports=function(api1,api_key1,i){
client_id <- api1
client_secret <- api_key1
res <- POST("https://api.yelp.com/oauth2/token",
body = list(grant_type = "client_credentials",
client_id = client_id,
client_secret = client_secret))
token <- content(res)$access_token
yelp <- "https://api.yelp.com"
term <- "sport shop"
location <- i
categories <- NULL
limit <- 50
radius <- 8000
url <- modify_url(yelp, path = c("v3", "businesses", "search"),
query = list(term = term, location = location,
limit = limit,
radius = radius))
res <- GET(url, add_headers('Authorization' = paste("bearer", client_secret)))
results <- content(res)
yelp_httr_parse <- function(x) {
parse_list <- list(
name = x$name,
rating = x$rating,
address1 = x$location$address1
)
parse_list <- lapply(parse_list, FUN = function(x) ifelse(is.null(x), "", x))
df <- data.frame(
name=parse_list$name,
rating = parse_list$rating,
address1 = parse_list$address1
)
df
}
results_list <- lapply(results$businesses, FUN = yelp_httr_parse)
shop <- do.call("rbind", results_list)
shop
}
sports(api1="q-f2lLVGZkys5AVkVPWsuQ",api_key1 =  "tLcN4rX8BzXZTSE5fYKHntHgSbjHilyGQV8VoXq0zGgiwP7RM8rS0PCOuRyRpn6UkMsEE9gnXWqEs2V32IreXfwVjao7iiAgKeJQ85u2n_mbuZn3-Tuq3R7qs4CPX3Yx",i="San Jose,CA")
devtools::document()
rm(list = c("autorepair", "FRED_APIkey", "GETINFO", "gym", "limit", "realtime_end", "realtime_start", "Resturant", "search_text", "sports"))
devtools::document()
